version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.4.0
  aws-ecs: circleci/aws-ecs@0.0.8
jobs:
  lint:
    docker:
      - image: circleci/node:10.16
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-packages
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: lint
          command: npm run lint
workflows:
  build-and-deploy:
    jobs:
      - lint
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          repo: duet-api
          region: AWS_DEFAULT_REGION
          tag: '${CIRCLE_SHA1}'
          extra-build-args: '--build-arg SENDGRID_API_KEY=$SENDGRID_API_KEY--build-arg AWS_S3_BUCKET_NAME=$AWS_S3_BUCKET_NAME--build-arg AWS_S3_IMAGE_FOLDER=$AWS_S3_IMAGE_FOLDER--build-arg AWS_SECRET_ACCESS_KEY_S3=$AWS_SECRET_ACCESS_KEY_S3--build-arg PAYPAL_LOW_BALANCE_THRESHOLD=$PAYPAL_LOW_BALANCE_THRESHOLD --build-arg PAYPAL_MODE=$PAYPAL_MODE --build-arg PAYPAL_CLIENT_ID=$PAYPAL_CLIENT_ID --build-arg PAYPAL_CLIENT_SECRET=$PAYPAL_CLIENT_SECRET --build-arg PAYPAL_NVP_API_USERNAME=$PAYPAL_NVP_API_USERNAME --build-arg PAYPAL_NVP_API_PASSWORD=$PAYPAL_NVP_API_PASSWORD --build-arg PAYPAL_NVP_API_SIGNATURE=$PAYPAL_NVP_API_SIGNATURE --build-arg TRANSFERWISE_API=$TRANSFERWISE_API --build-arg TRANSFERWISE_API_KEY=$TRANSFERWISE_API_KEY --build-arg TRANSFERWISE_LOW_BALANCE_THRESHOLD=$TRANSFERWISE_LOW_BALANCE_THRESHOLD --build-arg DATABASE_HOST=$DATABASE_HOST --build-arg DATABASE_PORT=$DATABASE_PORT --build-arg DATABASE_USER=$DATABASE_USER --build-arg DATABASE_PASS=$DATABASE_PASS --build-arg DATABASE=$DATABASE --build-arg SET_STORE_NOTIFICATION_FLAG=$SET_STORE_NOTIFICATION_FLAG --build-arg SENDGRID_NOTIFICATION_BEHAVIOR=$SENDGRID_NOTIFICATION_BEHAVIOR --build-arg SEND_ERROR_EMAILS=$SEND_ERROR_EMAILS --build-arg SEND_ITEM_STATUS_UPDATE_EMAILS=$SEND_ITEM_STATUS_UPDATE_EMAILS --build-arg FB_VERIFY_TOKEN=$FB_VERIFY_TOKEN --build-arg FB_ACCESS_TOKEN=$FB_ACCESS_TOKEN --build-arg CRON_INTERVAL_STORE_NOTIFICATIONS=$CRON_INTERVAL_STORE_NOTIFICATIONS --build-arg CRON_INTERVAL_CURRENCY=$CRON_INTERVAL_CURRENCY --build-arg CRON_INTERVAL_BANK_TRANSFERS=$CRON_INTERVAL_BANK_TRANSFERS --build-arg DUET_BENEFICIARIES_URL=$DUET_BENEFICIARIES_URL --build-arg BENEFICIARY_MATCHING_TOTAL_EUR_DONATED_WEIGHT=$BENEFICIARY_MATCHING_TOTAL_EUR_DONATED_WEIGHT --build-arg BENEFICIARY_MATCHING_RECENT_EUR_DONATED_WEIGHT=$BENEFICIARY_MATCHING_RECENT_EUR_DONATED_WEIGHT --build-arg BENEFICIARY_MATCHING_BASELINE_SCORE=$BENEFICIARY_MATCHING_BASELINE_SCORE'
          filters:
            branches:
              only: rm_aws_config
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          aws-region: AWS_DEFAULT_REGION
          family: 'duet-website'
          cluster-name: 'duet-website-staging'
          service-name: 'duet-website-staging'
          container-image-name-updates: 'container=duet-api,image-and-tag=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/duet-api:${CIRCLE_SHA1}'
          filters:
            branches:
              only: rm_aws_config